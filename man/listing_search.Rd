% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\name{listing_search}
\alias{listing_search}
\title{Return the top listings that are within the budget specified by the user.
The results are filtered by an optional input, model, and sorted by ascending price and another the specified feature in the sort_feature parameter.}
\usage{
listing_search(
  data,
  budget = c(0, Inf),
  model = "any",
  sort_feature = "odometer_mi",
  ascending = TRUE,
  price_col = "price_USD"
)
}
\arguments{
\item{data}{data.frame The input dataframe containing listing and car attributes}

\item{budget}{number or numeric vector of length 2 The maximum budget, or the range of budget when passing a list.}

\item{model}{character The model of the car that the user is interested in. The default is to include listings of any model.}

\item{sort_feature}{character The numeric variable that the user is interested in using to sort the result. The default value is to sort by odometer value.}

\item{ascending}{bool Boolean value that indicate whether the sort is ascending. The default value is True.}

\item{price_col}{character Character value that indicate the column name of price column.}
}
\value{
data.frame A data frame of the sorted listings that matches user's expected budget range.
}
\description{
Return the top listings that are within the budget specified by the user.
The results are filtered by an optional input, model, and sorted by ascending price and another the specified feature in the sort_feature parameter.
}
\examples{
sample_data <- data.frame(condition = c("good", "average", "average", "new"),
price_USD = c(50000, 20000, 80000, 90000),
model = c("s-class", "glk", "gls", "gls"),
odometer_mi = c(12000, 30000, 35000, 150000),
year = c(2016, 2015, 2020, 2010))
listing_search(sample_data, budget=c(0, 30000), model = "any", sort_feature = "odometer_mi", ascending = TRUE)
listing_search(sample_data, budget=50000, model = "gls", sort_feature = "year", ascending = FALSE)
}
